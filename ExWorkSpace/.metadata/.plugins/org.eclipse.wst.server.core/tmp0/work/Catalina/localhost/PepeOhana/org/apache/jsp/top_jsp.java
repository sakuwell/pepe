/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.7
 * Generated at: 2023-09-05 07:32:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import model.UsersInfoDto;

public final class top_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.UsersInfoDto");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ja\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <!-- Bootstrap CSS -->\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM\" crossorigin=\"anonymous\">\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <title>Top | pepeohana</title>\n");
      out.write("</head>\n");
      out.write("\n");

    // セッションを取得
	UsersInfoDto userInfoOnSession = (UsersInfoDto)session.getAttribute("LOGIN_INFO"); 
	boolean isLoggedIn = false; 
	String userName = "";
	//HttpSession mysession = request.getSession(true);

    // セッションが存在し、username属性もセットされている場合はログイン済み
    if (userInfoOnSession != null) {
		userName = userInfoOnSession.getUserName();	
        isLoggedIn = true;
    }

      out.write("\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("	<!-- ログイン済ヘッダー -->\n");
      out.write("	");
 if (isLoggedIn) { 
      out.write("\n");
      out.write("    <nav class=\"navbar navbar-expand-lg navbar-light bg-white\">\n");
      out.write("        <div class=\"container-fluid\">\n");
      out.write("          <a class=\"navbar-brand\" href=\"#\">\n");
      out.write("            <img src=\"images/pepe_ohana_logo.png\" alt=\"ページロゴ\" width=\"auto\" height=\"70\">\n");
      out.write("          </a>\n");
      out.write("          <div class=\"dropdown\">\n");
      out.write("            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n");
      out.write("            	");
      out.print( userName );
      out.write("さん\n");
      out.write("            </button>\n");
      out.write("            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n");
      out.write("              <li><a class=\"dropdown-item\" href=\"#\">マイページ</a></li>\n");
      out.write("              <li><a class=\"dropdown-item\" href=\"#\">ログアウト</a></li>\n");
      out.write("            </ul>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("    </nav>\n");
      out.write("    ");
 } else { 
      out.write("\n");
      out.write("    <!-- 未ログインヘッダー -->\n");
      out.write("    <nav class=\"navbar navbar-expand-lg navbar-light bg-white\">\n");
      out.write("    	<div class=\"container-fluid\">\n");
      out.write("        	<a class=\"navbar-brand\" href=\"#\">\n");
      out.write("            	<img src=\"images/pepe_ohana_logo.png\" alt=\"ページロゴ\" width=\"auto\" height=\"70\">\n");
      out.write("          	</a>\n");
      out.write("        	<div class=\"dropdown\">\n");
      out.write("            	<button class=\"btn btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n");
      out.write("             		 未ログイン\n");
      out.write("            	</button>\n");
      out.write("            	<ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n");
      out.write("              		<li><a class=\"dropdown-item\" href=\"#\">ログイン</a></li>\n");
      out.write("              		<li><a class=\"dropdown-item\" href=\"#\">新規ユーザー登録</a></li>\n");
      out.write("            	</ul>\n");
      out.write("          	</div>\n");
      out.write("        </div>\n");
      out.write("    </nav>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("    <!-- 未ログインヘッダーここまで -->\n");
      out.write("\n");
      out.write("\n");
      out.write("    <!-- ヒーロー画像 -->\n");
      out.write("    <img src=\"#\" class=\"img-fluid\" alt=\"ヒーロー画像\">\n");
      out.write("\n");
      out.write("    <!-- ここから下　ページごとの内容 -->\n");
      out.write("    <div>\n");
      out.write("        <!-- 検索フォームゾーン -->\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"h4 pb-2 mb-4 text-black border-bottom border-black\">\n");
      out.write("                ねこまっち検索\n");
      out.write("            </div>\n");
      out.write("                <p>家族をさがしているネコがたくさんいます！</p>\n");
      out.write("            <!-- 猫カード -->\n");
      out.write("            <div class=\"row\">\n");
      out.write(" 				<!-- カードのコンテンツ -->\n");
      out.write("                <div class=\"col-6 col-md-4 col-lg-3\">\n");
      out.write("                    <div class=\"card mb-3\">\n");
      out.write("                        <img src=\"images/ねこ_1.jpg\" class=\"card-img-top\" alt=\"猫画像\" style=\"width:100%\">\n");
      out.write("                        <div class=\"card-body\">\n");
      out.write("                            <h5 class=\"card-title text-center\">ぺぺ<small> ちゃん</small></h5>\n");
      out.write("                            <p class=\"card-text text-right\">性別：男の子</p>\n");
      out.write("                            <p class=\"card-text text-right\">生後：0歳5か月</p>\n");
      out.write("                            <p class=\"card-text text-right\">描種：アメリカンショートヘアー</p>\n");
      out.write("                            <div class=\"d-flex justify-content-center\">\n");
      out.write("                                <a href=\"#\" class=\"stretched-link\"></a>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write(" 				<!-- カードのコンテンツ -->\n");
      out.write("                <div class=\"col-6 col-md-4 col-lg-3\">\n");
      out.write("                    <div class=\"card mb-3\">\n");
      out.write("                        <img src=\"images/ねこ_1.jpg\" class=\"card-img-top\" alt=\"猫画像\" style=\"width:100%\">\n");
      out.write("                        <div class=\"card-body\">\n");
      out.write("                            <h5 class=\"card-title text-center\">ぺぺ<small> ちゃん</small></h5>\n");
      out.write("                            <p class=\"card-text text-right\">性別：男の子</p>\n");
      out.write("                            <p class=\"card-text text-right\">生後：0歳5か月</p>\n");
      out.write("                            <p class=\"card-text text-right\">描種：アメリカンショートヘアー</p>\n");
      out.write("                            <div class=\"d-flex justify-content-center\">\n");
      out.write("                                <a href=\"#\" class=\"stretched-link\"></a>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("				<!-- カードのコンテンツ -->\n");
      out.write("                <div class=\"col-6 col-md-4 col-lg-3\">\n");
      out.write("                    <div class=\"card mb-3\">\n");
      out.write("                        <img src=\"images/ねこ_1.jpg\" class=\"card-img-top\" alt=\"猫画像\" style=\"width:100%\">\n");
      out.write("                        <div class=\"card-body\">\n");
      out.write("                            <h5 class=\"card-title text-center\">ぺぺ<small> ちゃん</small></h5>\n");
      out.write("                            <p class=\"card-text text-right\">性別：男の子</p>\n");
      out.write("                            <p class=\"card-text text-right\">生後：0歳5か月</p>\n");
      out.write("                            <p class=\"card-text text-right\">描種：アメリカンショートヘアー</p>\n");
      out.write("                            <div class=\"d-flex justify-content-center\">\n");
      out.write("                                <a href=\"#\" class=\"stretched-link\"></a>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <!-- カードのコンテンツ -->\n");
      out.write("                <div class=\"col-6 col-md-4 col-lg-3\">\n");
      out.write("                    <div class=\"card mb-3\">\n");
      out.write("                        <img src=\"images/ねこ_1.jpg\" class=\"card-img-top\" alt=\"猫画像\" style=\"width:100%\">\n");
      out.write("                        <div class=\"card-body\">\n");
      out.write("                            <h5 class=\"card-title text-center\">ぺぺ<small> ちゃん</small></h5>\n");
      out.write("                            <p class=\"card-text text-right\">性別：男の子</p>\n");
      out.write("                            <p class=\"card-text text-right\">生後：0歳5か月</p>\n");
      out.write("                            <p class=\"card-text text-right\">描種：アメリカンショートヘアー</p>\n");
      out.write("                            <div class=\"d-flex justify-content-center\">\n");
      out.write("                                <a href=\"#\" class=\"stretched-link\"></a>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <!-- ここまで　ページごとの内容 -->\n");
      out.write("\n");
      out.write("    <!-- フッター -->\n");
      out.write("    <div class=\"text-center mt-4\">\n");
      out.write("        <a class=\"icon-link icon-link-hover\" href=\"#\">\n");
      out.write("            TOPへ\n");
      out.write("        </a>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"container\">\n");
      out.write("        <footer class=\"mt-3 d-flex flex-wrap justify-content-between align-items-center my-4 border-top\">\n");
      out.write("          <p class=\"col-md-4 mb-0 text-body-secondary\">© 2023 pepeohana, Inc</p>\n");
      out.write("          <a href=\"#\" class=\"col-md-4 d-flex align-items-center justify-content-center mb-3 mb-md-0 me-md-auto link-body-emphasis text-decoration-none\">\n");
      out.write("            <svg class=\"bi me-2\" width=\"40\" height=\"32\"><use xlink:href=\"#bootstrap\"></use></svg>\n");
      out.write("          </a>\n");
      out.write("      \n");
      out.write("          <ul class=\"nav col-md-4 justify-content-end\">\n");
      out.write("            <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text-body-secondary\">Home</a></li>\n");
      out.write("            <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text-body-secondary\">Features</a></li>\n");
      out.write("            <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text-body-secondary\">Pricing</a></li>\n");
      out.write("            <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text-body-secondary\">FAQs</a></li>\n");
      out.write("            <li class=\"nav-item\"><a href=\"#\" class=\"nav-link px-2 text-body-secondary\">About</a></li>\n");
      out.write("          </ul>\n");
      out.write("        </footer>\n");
      out.write("    </div>\n");
      out.write("    <!-- フッター　ここまで -->\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
